@startuml
 skinparam {
    defaultFontName Noto Sans CJK JP Black
 }

title CityGML-OSM 実行イメージ

 cloud Internet {
  node PLATEAU {
   collections "「3D都市データ」\nCityGML" as citygml
  }
  node OpenStreetMap {
   database "OpenStreetMap\n既存データ" as osmdb
  }
 }

node PC {

 folder 任意のフォルダ {
  file "`#####_bldg_#####_op2.gml`" as gml
  () "`run.sh`を実行 (1st,2nd,3rd)" as run
  note top of run
  	処理内容
  	(1) 1st: "CityGML"ファイルを"osm"ファイルに変換されます
  	(2) 2nd: "CityGML"と既存データとの重複チェックが行われます
  	(3) 3rd: 既存データとの重複を考慮した`mrg`ファイルが生成されます
  end note
  file "`*.osm`\n第一段階 生成物" as osm
  file "`*.org.osm`\n第二段階 生成物" as org
  file "`*.mrg.osm`\n第三段階 生成物" as mrg
  citygml --> gml : ダウンロード and 解凍
  osmdb ..> run : 既存データの参照
  gml ..> run
  run --> osm
  run --> org
  run --> mrg
 }

  node JOSM
  mrg --> JOSM : drop

  note right of JOSM
	不要なPOIを消去する
  end note

  () "`uploader.sh`を実行 (4th)" as 4th
  file "`checked.osm`" as checked
  JOSM --> checked : 名前をつけて保存
  checked ..> 4th
  note bottom of 4th
	"uploader"の処理内容
	1. アクションが `delete` のPOIが除去されます
	2. タグ`MLIT_PLATEAU:fixme=delete *` があるPOIのアクションが `delete` になります
	3. タグ `MLIT_PLATEAU:fixme=*` が除去されます
	4. 処理結果が ファイル`upload.osm` に書き出されます
  end note

  file "`upload.osm`" as upload
  node "JOSM" as JOSM2

  4th -> upload
  JOSM2 <-- upload : drop

  note right of JOSM2
	`upload.osm`をアップロードする
  end note
}

osmdb <-- JOSM2 : アップロード

@enduml